AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  trending articles

Globals:
  Function:
    MemorySize: 1024
    Timeout: 10

Resources:
  TrendingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: amc-trending-data-prod
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
  TrendingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TrendingBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: '*'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref TrendingBucket
                - /*
    DependsOn: TrendingBucket
  TrendingFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: amc-trending-function-prod
      CodeUri: source/
      Handler: main.lambda_handler
      Runtime: python3.9
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python39:28
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref TrendingBucket
    DependsOn: TrendingBucket
  TrendingEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: default
      Name: amc-trending-every-2-hr-prod
      ScheduleExpression: cron(0 0/2 * * ? *)
      State: ENABLED
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "TrendingFunction"
              - "Arn"
          Id: "trendingFunctionTarget"
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "TrendingFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "TrendingEventRule"
          - "Arn"


